# =============================

def f(a):
    if a[0] == '1':
        return (a + '1101')[3:]
    else:
        return (a + '00')[3:]

# =============================

A = '000011011101110100'
C = '000000110111011101000000110111011101000000110111011101'


# =============================

def is_evolving(a, b):
    for step in range(int(1e6)):
        a = f(a)
        if a == b:
            return True
    return False

n = 20
for i in range(n):

    if i % 10 == 0:
        print(i, end=' ')

    for j in range(n):
        assert is_evolving(A*i     + B + C*j,
                           A*(i+1) + B + C*(j+1))

print('Checked')

'''
0 10 20 30 40 50 60 70 80 90 Checked
'''

# =============================

def g(a):
    out = ''
    for ch in a[::3]:
        out += '1101' if ch is '1' else '00'
    return out

# =============================

def l(a):
    return len(a) % 3

# =============================

def F(a):
    while '0' in a or '1' in a:
        if a[0] == '1':
            a += 'yyxy'
        else:
            a += 'xx'
        a = a[3:]
    return a.replace('x', '0').replace('y', '1')

# =============================

from data import w
x = [0, 1, 0, 2, 1, 0, 1, 0, 1, 2, 0, 0, 1, 0]

# =============================

def verify(a, b, c, x, d, e, f, y):

    if (x - l(b)) % 3 != y:
        return False

    if l(a) != 0 or l(c) != 0:
        return False

    if g(a[x:]) != d or g(b[x:]) != e or g(c[y:]) != f:
        return False

    return True

# =============================

for i in range(13):

    print(i, end=' ')

    assert verify(w[i][0], w[i][1], w[i][2], x[i],
                  w[i+1][0], w[i+1][1], w[i+1][2], x[i+1])

print('Verified')
'''
0 1 2 3 4 5 6 7 8 9 10 11 12 Verified
'''

# =============================

for i in range(13):

    print(i, end=' ')

    for n in range(100):
        for m in range(100):
            s_0 = w[i][0]*n + w[i][1] + w[i][2]*m
            s_1 = w[i+1][0]*n + w[i+1][1] + w[i+1][2]*m
            assert F(s_0[x[i]:]) == s_1[x[i+1]:]

print('Checked')
'''
0 1 2 3 4 5 6 7 8 9 10 11 12 Checked
'''

# =============================

print(A == w[0][0])
print(B == w[0][1])
print(C == w[0][2])
print(w[13][0] == w[0][0])
print(w[13][1] == w[0][0] + w[0][1] + w[0][2])
print(w[13][2] == w[0][2])
'''
True
True
True
True
True
True
'''

